{"version":3,"sources":["components/Numero.js","components/HenkiloLisays.js","services/persons.js","components/Ilmoitus.js","App.js","serviceWorker.js","index.js"],"names":["Numero","_ref","persons","poista","console","log","react_default","a","createElement","map","person","key","id","name","number","onClick","HenkiloLisays","onSubmit","this","props","value","state","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","React","Component","baseUrl","services_persons","getAll","axios","get","then","response","data","create","newObject","post","update","put","concat","remove","delete","Ilmoitus","message","isError","className","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addName","event","preventDefault","some","bookObject","henkiloPalvelu","newPerson","setState","ilmoitus","setTimeout","temp","filter","p","updateName","alert","removeName","henkilo","window","confirm","catch","error","target","handleFilter","showOnly","_this2","_this3","namesToShow","includes","components_HenkiloLisays","components_Ilmoitus","components_Numero","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.670a7313.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Numero = ({persons, poista}) => {\r\n    console.log(persons)\r\n      return (\r\n        <ul>\r\n             {persons.map(person => <li key={person.id}>{person.name} {person.number} <button onClick={poista(person.id)}> poista</button></li>)}\r\n        </ul>\r\n      )\r\n  }\r\n  \r\n  export default Numero","import React from 'react';\r\n\r\nclass HenkiloLisays extends React.Component {\r\n  render(){\r\n    return (\r\n      <form onSubmit={this.props.onSubmit}>\r\n      <div>\r\n        nimi: <input value={this.props.state.newName} onChange={this.props.handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        numero: <input value={this.props.state.newNumber} onChange={this.props.handleNumberChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">lisää</button>\r\n      </div>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n  \r\n  export default HenkiloLisays","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react';\r\nimport './index.css'\r\n\r\nconst Ilmoitus = ({ message, isError }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  if(isError){\r\n    return (\r\n     <div className=\"error\">\r\n        {message}\r\n     </div>\r\n  )\r\n  }\r\n  return (\r\n    <div className=\"notification\">\r\n    {message}\r\n </div>\r\n  )\r\n}\r\n  \r\n  export default Ilmoitus","import React from 'react'\r\nimport Numero from './components/Numero'\r\nimport HenkiloLisays from './components/HenkiloLisays'\r\nimport henkiloPalvelu from './services/persons'\r\nimport Ilmoitus from './components/Ilmoitus'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      persons: [],\r\n      newName: 'anna uusi nimi',\r\n      newNumber: '000-00000000',\r\n      showOnly: '',\r\n      ilmoitus : null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('did mount')\r\n    henkiloPalvelu\r\n      .getAll()\r\n      .then(response => {\r\n        this.setState({persons : response})\r\n      })\r\n  }\r\n\r\n  addName = (event) => {\r\n    event.preventDefault()\r\n    console.log('nappia painettu')\r\n\r\n    if(this.state.persons.some(person => person.name === this.state.newName) === false &&\r\n      this.state.persons.some(person => person.number === this.state.newNumber) === false){   \r\n      const bookObject ={\r\n        name: this.state.newName,\r\n        number: this.state.newNumber\r\n      }  \r\n      henkiloPalvelu\r\n        .create(bookObject)\r\n        .then(newPerson => {\r\n          this.setState({\r\n            persons : this.state.persons.concat(newPerson),\r\n            newName : 'anna uusi nimi',\r\n            newNumber : '000-0000000',\r\n            ilmoitus : `lisättiin henkilö ${bookObject.name} onnistuneesti`,\r\n            isError: false\r\n            })\r\n          setTimeout(() => {\r\n              this.setState({ilmoitus: null})\r\n            }, 5000)\r\n          })\r\n     }\r\n    else if(this.state.persons.some(person => person.number === this.state.newNumber) === false){\r\n      const temp = this.state.persons.filter(p=> p.name === this.state.newName)\r\n      console.log(temp)\r\n      const bookObject ={\r\n        id: temp[0].id,\r\n        name: this.state.newName,\r\n        number: this.state.newNumber\r\n      }\r\n          this.updateName(bookObject)\r\n    }\r\n    else {\r\n          alert('Nimi ja numero löytyy jo osoitekirjasta')\r\n    }      \r\n  }\r\n\r\n  removeName = (id) => {\r\n      console.log('remove')\r\n      return () => {\r\n      const henkilo = this.state.persons.filter(person => person.id === id)\r\n      if (window.confirm(`'Poistetaanko ${henkilo[0].name}`)){\r\n       henkiloPalvelu\r\n        .remove(id)\r\n        .then( response => {\r\n          console.log('remove successful')\r\n          this.setState({\r\n            persons : this.state.persons.filter(person => person.id !== id),\r\n            ilmoitus : 'poistettiin henkilö onnistuneesti',\r\n            isError: false\r\n          })\r\n          setTimeout(() => {\r\n            this.setState({ilmoitus: null})\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            ilmoitus: `henkilö on jo valitettavasti poistettu palvelimelta`,\r\n            persons: this.state.persons.filter(p => p.id !== id),\r\n            isError: true\r\n          })\r\n        setTimeout(() => {\r\n            this.setState({ilmoitus: null})\r\n          }, 5000)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  updateName = (bookObject) => {\r\n    console.log('update')\r\n    if(window.confirm(`'Päivitetäänkö ${bookObject.name}`)){\r\n        console.log(bookObject)\r\n        henkiloPalvelu\r\n          .update(bookObject.id, bookObject)\r\n          .then( response => {\r\n            console.log('update successful')\r\n            const persons = this.state.persons.filter(p => p.id !== bookObject.id)\r\n            this.setState({\r\n              persons : persons.concat(response),\r\n              newName : 'anna uusi nimi',\r\n              newNumber : '000-0000000',\r\n              ilmoitus : `Päivitettiin henkilön ${bookObject.name} numero onnistuneesti`,\r\n              isError: false\r\n            })\r\n            setTimeout(() => {\r\n              this.setState({ilmoitus: null})\r\n            }, 5000)\r\n      })\r\n  }\r\n}\r\n\r\n  handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    this.setState({newName : event.target.value})\r\n  }\r\n\r\n  handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    this.setState({newNumber : event.target.value})\r\n  }\r\n\r\n  handleFilter = (event) => {\r\n    console.log(event.target.value)\r\n    this.setState({showOnly : event.target.value})\r\n  }\r\n\r\n  render() {\r\n    const namesToShow =\r\n    this.state.persons.filter(person => person.name.includes(this.state.showOnly))\r\n    return (\r\n      <div>\r\n        <h3>haku</h3>\r\n        <form>\r\n        <div>\r\n            rajaa: <input value={this.state.showOnly} onChange={this.handleFilter}/>\r\n        </div>\r\n        </form>\r\n        <h2>Puhelinluettelo</h2>\r\n        <div>\r\n          <HenkiloLisays state={this.state}\r\n          onSubmit={this.addName}\r\n          handleNameChange={this.handleNameChange}\r\n          handleNumberChange={this.handleNumberChange} />\r\n        </div>\r\n        <h2>Numerot</h2>\r\n        <Ilmoitus message={this.state.ilmoitus} isError={this.state.isError}/>\r\n        <div>\r\n           <Numero persons={namesToShow} poista={this.removeName}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}